{"version":3,"file":"static/js/736.132d854c.chunk.js","mappings":"kTAEMA,EAAW,+BACXC,EAAU,mCACVC,EAAmB,WACvB,IAAMC,EAAQC,OAAOC,aAAaC,QAAQ,YAC1C,OAAOH,EAAQI,KAAKC,MAAML,GAAS,OACpC,EAEYM,EAAiB,mCAAG,oGACbC,EAAAA,EAAAA,IAAA,UACbV,EADa,wCAC2BC,IAFd,cACzBU,EADyB,yBAIxBA,EAAIC,MAJoB,2CAAH,qDAOjBC,EAAe,mCAAG,WAAOC,EAAOC,GAAd,kFACvBC,EAAcF,EAAMG,OACpBC,EAAOhB,IAFgB,SAMXQ,EAAAA,EAAAA,IAAA,UAAaV,EAAb,iBAAsC,CACtDmB,OAAQ,CACNC,QAASnB,EACTa,MAAOE,EACPK,SAAUH,EACVH,KAAMA,EACNO,eAAe,KAZU,cAMvBX,EANuB,yBAetBA,EAAIC,MAfkB,2CAAH,wDAkBfW,EAAY,mCAAG,WAAMC,GAAN,gFACpBN,EAAOhB,IADa,SAMRQ,EAAAA,EAAAA,IAAA,UAAaV,EAAb,kBAA+BwB,GAAY,CAC3DL,OAAQ,CACNC,QAASnB,EACToB,SAAUH,KATY,cAMpBP,EANoB,yBAYnBA,EAAIC,MAZe,2CAAH,sDAeZa,EAAe,mCAAG,WAAMD,GAAN,gFACvBN,EAAOhB,IADgB,SAMXQ,EAAAA,EAAAA,IAAA,UAAaV,EAAb,kBAA+BwB,EAA/B,YAAmD,CACnEL,OAAQ,CACNC,QAASnB,EACToB,SAAUH,EACVH,KAAM,KAVmB,cAMvBJ,EANuB,yBAatBA,EAAIC,MAbkB,2CAAH,sDAgBfc,EAAe,mCAAG,WAAMF,GAAN,gFACvBN,EAAOhB,IADgB,SAMXQ,EAAAA,EAAAA,IAAA,UAAaV,EAAb,kBAA+BwB,EAA/B,YAAmD,CACnEL,OAAQ,CACNC,QAASnB,EACToB,SAAUH,KATe,cAMvBP,EANuB,yBAYtBA,EAAIC,MAZkB,2CAAH,qD,sIC/Dfe,EAAYC,EAAAA,EAAAA,GAAH,iGAOTC,EAAYD,EAAAA,EAAAA,GAAH,6C,SC+BtB,EAnCa,WACX,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KASA,OAPAC,EAAAA,EAAAA,YAAU,WAIR,OAHAT,EAAAA,EAAAA,IAAgBI,GAASM,MAAK,SAAAC,GAAM,OAClCH,EAAYG,EAAOC,KAAKC,MAAM,EAAG,IADC,IAG7BL,EAAY,GACpB,GAAE,CAACJ,KAGF,UAACH,EAAD,WACuB,IAApBM,EAASO,SAAgB,+CACzBP,EAASQ,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,UAAWC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,aAAcC,EAAS,EAATA,GAC9C,OACE,UAAChB,EAAD,YACE,gBACEiB,IACEF,EAAY,yCAC0BA,GAClC,+FAENG,IAAKJ,EACLK,MAAM,WAER,wBAAKL,KACL,uCAAeD,OAXDG,EAcnB,MAGN,C","sources":["components/Api/MovieApi.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '321ca123fc0a63a77ea7b403d8c1a88c';\nconst selectedLanguage = () => {\n  const value = window.localStorage.getItem('language');\n  return value ? JSON.parse(value) : 'en-US';\n};\n\nexport const getTrendingMovies = async () => {\n  const res = await axios.get(\n    `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n  );\n  return res.data;\n};\n\nexport const getMovieByQuery = async (query, page) => {\n  const searchQuery = query.trim();\n  const lang = selectedLanguage();\n  // const res = await axios.get(\n  //   `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`\n  // );\n  const res = await axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: searchQuery,\n      language: lang,\n      page: page,\n      include_adult: false,\n    },\n  });\n  return res.data;\n};\n\nexport const getMovieById = async movie_id => {\n  const lang = selectedLanguage();\n\n  // const res = await axios.get(\n  //   `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${API_KEY}&language=en-US`\n  // );\n  const res = await axios.get(`${BASE_URL}/movie/${movie_id}`, {\n    params: {\n      api_key: API_KEY,\n      language: lang,\n    },\n  });\n  return res.data;\n};\n\nexport const getMovieReviews = async movie_id => {\n  const lang = selectedLanguage();\n\n  // const res = await axios.get(\n  //   `https://api.themoviedb.org/3/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  // );\n  const res = await axios.get(`${BASE_URL}/movie/${movie_id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: lang,\n      page: 1,\n    },\n  });\n  return res.data;\n};\n\nexport const getMovieCredits = async movie_id => {\n  const lang = selectedLanguage();\n\n  // const res = await axios.get(\n  //   `https://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US`\n  // );\n  const res = await axios.get(`${BASE_URL}/movie/${movie_id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: lang,\n    },\n  });\n  return res.data;\n};\n","import styled from '@emotion/styled';\n\nexport const ActorList = styled.ul`\n  margin-top: 15px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n`;\n\nexport const ActorCard = styled.li`\n  max-width: 200px;\n`;\n","import { getMovieCredits } from 'components/Api/MovieApi';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ActorCard, ActorList } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castInfo, setCastInfo] = useState([]);\n\n  useEffect(() => {\n    getMovieCredits(movieId).then(result =>\n      setCastInfo(result.cast.slice(0, 15))\n    );\n    return setCastInfo([]);\n  }, [movieId]);\n\n  return (\n    <ActorList>\n      {castInfo.length === 0 && <div>No results found!</div>}\n      {castInfo.map(({ character, name, profile_path, id }) => {\n        return (\n          <ActorCard key={id}>\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                  : 'https://mir-s3-cdn-cf.behance.net/project_modules/1400_opt_1/9556d16312333.5691dd2255721.jpg'\n              }\n              alt={name}\n              width=\"200px\"\n            />\n            <h4>{name}</h4>\n            <p>Character: {character}</p>\n          </ActorCard>\n        );\n      })}\n    </ActorList>\n  );\n};\n\nexport default Cast;\n"],"names":["BASE_URL","API_KEY","selectedLanguage","value","window","localStorage","getItem","JSON","parse","getTrendingMovies","axios","res","data","getMovieByQuery","query","page","searchQuery","trim","lang","params","api_key","language","include_adult","getMovieById","movie_id","getMovieReviews","getMovieCredits","ActorList","styled","ActorCard","movieId","useParams","useState","castInfo","setCastInfo","useEffect","then","result","cast","slice","length","map","character","name","profile_path","id","src","alt","width"],"sourceRoot":""}