{"version":3,"file":"static/js/387.22cea177.chunk.js","mappings":"kTAEMA,EAAW,+BACXC,EAAU,mCACVC,EAAmB,WACvB,IAAMC,EAAQC,OAAOC,aAAaC,QAAQ,YAC1C,OAAOH,EAAQI,KAAKC,MAAML,GAAS,OACpC,EAEYM,EAAiB,mCAAG,oGACbC,EAAAA,EAAAA,IAAA,UACbV,EADa,wCAC2BC,IAFd,cACzBU,EADyB,yBAIxBA,EAAIC,MAJoB,2CAAH,qDAOjBC,EAAe,mCAAG,WAAOC,EAAOC,GAAd,kFACvBC,EAAcF,EAAMG,OACpBC,EAAOhB,IAFgB,SAMXQ,EAAAA,EAAAA,IAAA,UAAaV,EAAb,iBAAsC,CACtDmB,OAAQ,CACNC,QAASnB,EACTa,MAAOE,EACPK,SAAUH,EACVH,KAAMA,EACNO,eAAe,KAZU,cAMvBX,EANuB,yBAetBA,EAAIC,MAfkB,2CAAH,wDAkBfW,EAAY,mCAAG,WAAMC,GAAN,gFACpBN,EAAOhB,IADa,SAMRQ,EAAAA,EAAAA,IAAA,UAAaV,EAAb,kBAA+BwB,GAAY,CAC3DL,OAAQ,CACNC,QAASnB,EACToB,SAAUH,KATY,cAMpBP,EANoB,yBAYnBA,EAAIC,MAZe,2CAAH,sDAeZa,EAAe,mCAAG,WAAMD,GAAN,gFACvBN,EAAOhB,IADgB,SAMXQ,EAAAA,EAAAA,IAAA,UAAaV,EAAb,kBAA+BwB,EAA/B,YAAmD,CACnEL,OAAQ,CACNC,QAASnB,EACToB,SAAUH,EACVH,KAAM,KAVmB,cAMvBJ,EANuB,yBAatBA,EAAIC,MAbkB,2CAAH,sDAgBfc,EAAe,mCAAG,WAAMF,GAAN,gFACvBN,EAAOhB,IADgB,SAMXQ,EAAAA,EAAAA,IAAA,UAAaV,EAAb,kBAA+BwB,EAA/B,YAAmD,CACnEL,OAAQ,CACNC,QAASnB,EACToB,SAAUH,KATe,cAMvBP,EANuB,yBAYtBA,EAAIC,MAZkB,2CAAH,qD,sIC/Dfe,EAAaC,EAAAA,EAAAA,GAAH,uLASVC,EAAaD,EAAAA,EAAAA,KAAH,wH,SCuBvB,EA7BgB,WACd,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAOA,OALAC,EAAAA,EAAAA,YAAU,WAER,OADAV,EAAAA,EAAAA,IAAgBK,GAASM,MAAK,SAAAC,GAAM,OAAIH,EAAeG,EAAOC,QAA1B,IAC7BJ,EAAe,GACvB,GAAE,CAACJ,KAGF,0BAC0B,IAAvBG,EAAYM,SACX,gBAAKC,MAAO,CAAEC,UAAW,QAAzB,+BAEDR,EAAYS,KAAI,YAA0C,IAAvCC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,WAAYC,EAAS,EAATA,GAC/C,OACE,UAACnB,EAAD,YACE,qCAAagB,MACb,SAACd,EAAD,UACGgB,EAAWE,MAAM,EAAG,IAAIC,MAAM,KAAKC,UAAUC,KAAK,QAErD,uBAAIN,MALWE,EAQpB,MAGN,C","sources":["components/Api/MovieApi.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '321ca123fc0a63a77ea7b403d8c1a88c';\nconst selectedLanguage = () => {\n  const value = window.localStorage.getItem('language');\n  return value ? JSON.parse(value) : 'en-US';\n};\n\nexport const getTrendingMovies = async () => {\n  const res = await axios.get(\n    `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n  );\n  return res.data;\n};\n\nexport const getMovieByQuery = async (query, page) => {\n  const searchQuery = query.trim();\n  const lang = selectedLanguage();\n  // const res = await axios.get(\n  //   `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`\n  // );\n  const res = await axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: searchQuery,\n      language: lang,\n      page: page,\n      include_adult: false,\n    },\n  });\n  return res.data;\n};\n\nexport const getMovieById = async movie_id => {\n  const lang = selectedLanguage();\n\n  // const res = await axios.get(\n  //   `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${API_KEY}&language=en-US`\n  // );\n  const res = await axios.get(`${BASE_URL}/movie/${movie_id}`, {\n    params: {\n      api_key: API_KEY,\n      language: lang,\n    },\n  });\n  return res.data;\n};\n\nexport const getMovieReviews = async movie_id => {\n  const lang = selectedLanguage();\n\n  // const res = await axios.get(\n  //   `https://api.themoviedb.org/3/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  // );\n  const res = await axios.get(`${BASE_URL}/movie/${movie_id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: lang,\n      page: 1,\n    },\n  });\n  return res.data;\n};\n\nexport const getMovieCredits = async movie_id => {\n  const lang = selectedLanguage();\n\n  // const res = await axios.get(\n  //   `https://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US`\n  // );\n  const res = await axios.get(`${BASE_URL}/movie/${movie_id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: lang,\n    },\n  });\n  return res.data;\n};\n","import styled from '@emotion/styled';\n\nexport const ReviewCard = styled.li`\n  position: relative;\n  margin: 15px;\n  padding: 10px;\n  background-color: #ededd5;\n  border: 1px solid rgba(199, 199, 179, 0.7);\n  border-radius: 20px;\n`;\n\nexport const ReviewTime = styled.span`\n  position: absolute;\n  top: 10px;\n  right: 15px;\n  font-style: italic;\n  font-size: 14px;\n`;\n","import { getMovieReviews } from 'components/Api/MovieApi';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReviewCard, ReviewTime } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [rewiewsInfo, setRewiewsInfo] = useState([]);\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(result => setRewiewsInfo(result.results));\n    return setRewiewsInfo([]);\n  }, [movieId]);\n\n  return (\n    <ul>\n      {rewiewsInfo.length === 0 && (\n        <div style={{ marginTop: '15px' }}>No reviews found!</div>\n      )}\n      {rewiewsInfo.map(({ author, content, created_at, id }) => {\n        return (\n          <ReviewCard key={id}>\n            <h4>Author: {author}</h4>\n            <ReviewTime>\n              {created_at.slice(0, 16).split('T').reverse().join(' ')}\n            </ReviewTime>\n            <p>{content}</p>\n          </ReviewCard>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["BASE_URL","API_KEY","selectedLanguage","value","window","localStorage","getItem","JSON","parse","getTrendingMovies","axios","res","data","getMovieByQuery","query","page","searchQuery","trim","lang","params","api_key","language","include_adult","getMovieById","movie_id","getMovieReviews","getMovieCredits","ReviewCard","styled","ReviewTime","movieId","useParams","useState","rewiewsInfo","setRewiewsInfo","useEffect","then","result","results","length","style","marginTop","map","author","content","created_at","id","slice","split","reverse","join"],"sourceRoot":""}